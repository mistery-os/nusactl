# Symbols defined in the library which aren't specifically bound to a
# version node are effectively bound to an unspecified base version of
# the library. It is possible to bind all otherwise unspecified symbols
# to a given version node using `global: *' somewhere in the version script.
#
# The interfaces at the "v1" level.
# At this level we present these functions to the linker (and thus to an
# application).
# Any functions not defined in the global list (i.e. "local") will be internal
# to the library (i.e. not exported but used within the library).
# Thus the real function names, "nusa_bind_v1" etc, are local and won't
# be known to the linker.

# the first 16 have v1 aliases
# 3 of the 5 system calls that libnusa provides are common to all versions:
libnusa_1.1 {
  global:
    set_prampolicy;
    get_prampolicy;
    mbind;
    nusa_all_nodes;
    nusa_alloc;
    nusa_alloc_interleaved;
    nusa_alloc_interleaved_subset;
    nusa_alloc_local;
    nusa_alloc_onnode;
    nusa_available;
    nusa_bind;
    nusa_distance;
    nusa_error;
    nusa_exit_on_error;
    nusa_free;
    nusa_get_interleave_mask;
    nusa_get_interleave_node;
    nusa_get_membind;
    nusa_get_run_node_mask;
    nusa_interleave_memory;
    nusa_max_node;
    nusa_migrate_pages;
    nusa_no_nodes;
    nusa_node_size64;
    nusa_node_size;
    nusa_node_to_cpus;
    nusa_pagesize;
    nusa_parse_bitmap;
    nusa_police_memory;
    nusa_preferred;
    nusa_run_on_node;
    nusa_run_on_node_mask;
    nusa_sched_getaffinity;
    nusa_sched_setaffinity;
    nusa_set_bind_policy;
    nusa_set_interleave_mask;
    nusa_set_localalloc;
    nusa_set_membind;
    nusa_set_preferred;
    nusa_set_strict;
    nusa_setlocal_memory;
    nusa_tonode_memory;
    nusa_tonodemask_memory;
    nusa_warn;
    nusa_exit_on_warn;
  local:
    *;
};

# The interfaces at the "v2" level.
# The first 17 have v2 aliases
# We add the bitmask_ functions
# and the move_pages and migrate_pages system calls
# 1.2 depends on 1.1

libnusa_1.2 {
  global:
    copy_bitmask_to_nodemask;
    copy_nodemask_to_bitmask;
    copy_bitmask_to_bitmask;
    move_pages;
    migrate_pages;
    nusa_all_cpus_ptr;
    nusa_all_nodes_ptr;
    nusa_alloc_interleaved_subset;
    nusa_realloc;
    nusa_allocate_cpumask;
    nusa_allocate_nodemask;
    nusa_bind;
    nusa_bitmask_alloc;
    nusa_bitmask_clearall;
    nusa_bitmask_clearbit;
    nusa_bitmask_equal;
    nusa_bitmask_free;
    nusa_bitmask_isbitset;
    nusa_bitmask_nbytes;
    nusa_bitmask_setall;
    nusa_bitmask_setbit;
    nusa_bitmask_weight;
    nusa_get_interleave_mask;
    nusa_get_membind;
    nusa_get_mems_allowed;
    nusa_get_run_node_mask;
    nusa_interleave_memory;
    nusa_max_possible_node;
    nusa_move_pages;
    nusa_no_nodes_ptr;
    nusa_node_to_cpus;
    nusa_node_of_cpu;
    nusa_nodes_ptr;
    nusa_num_configured_cpus;
    nusa_num_configured_nodes;
    nusa_num_possible_nodes;
    nusa_num_task_cpus;
    nusa_num_task_nodes;
    nusa_num_thread_cpus;
    nusa_num_thread_nodes;
    nusa_parse_bitmap;
    nusa_parse_cpustring;
    nusa_parse_nodestring;
    nusa_run_on_node_mask;
    nusa_sched_getaffinity;
    nusa_sched_setaffinity;
    nusa_set_interleave_mask;
    nusa_set_membind;
    nusa_tonodemask_memory;
  local:
    *;
} libnusa_1.1;

# New parsing interface for cpu/nusastrings
# was added into version 1.3

libnusa_1.3 {
  global:
    nusa_parse_cpustring_all;
    nusa_parse_nodestring_all;
    nusa_num_possible_cpus;
  local:
    *;
} libnusa_1.2;

# New interface with customizable cpuset awareness
# was added into version 1.4
libnusa_1.4 {
  global:
    nusa_run_on_node_mask_all;
  local:
    *;
} libnusa_1.3;
